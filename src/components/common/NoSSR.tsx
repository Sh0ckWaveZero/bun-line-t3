/**
 * üõ°Ô∏è NoSSR Component - ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Hydration Mismatch
 * Component wrapper ‡∏ó‡∏µ‡πà‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ render ‡∏ö‡∏ô server-side
 * ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö components ‡∏ó‡∏µ‡πà‡∏°‡∏µ dynamic content ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ browser APIs
 */

"use client";

import React, { useEffect, useState } from 'react';

interface NoSSRProps {
  children: React.ReactNode;
  fallback?: React.ReactNode;
  defer?: boolean;
}

/**
 * üéØ NoSSR Component
 * ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô hydration mismatch ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà render children ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤ client ‡∏à‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°
 */
export const NoSSR: React.FC<NoSSRProps> = ({ 
  children, 
  fallback = null,
  defer = false 
}) => {
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    if (defer) {
      // ‡∏£‡∏≠ 1 tick ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ browser render ‡∏Å‡πà‡∏≠‡∏ô
      const timer = setTimeout(() => setMounted(true), 0);
      return () => clearTimeout(timer);
    } else {
      setMounted(true);
    }
  }, [defer]);

  // ‡πÑ‡∏°‡πà render children ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤ component ‡∏à‡∏∞ mount ‡∏ö‡∏ô client
  if (!mounted) {
    return <>{fallback}</>;
  }

  return <>{children}</>;
};

/**
 * üîÑ Higher-Order Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö NoSSR
 */
export function withNoSSR<P extends object>(
  Component: React.ComponentType<P>,
  fallback?: React.ReactNode
) {
  const WrappedComponent = (props: P) => (
    <NoSSR fallback={fallback}>
      <Component {...props} />
    </NoSSR>
  );

  WrappedComponent.displayName = `withNoSSR(${Component.displayName || Component.name})`;
  
  return WrappedComponent;
}

/**
 * üé≠ ClientOnly Component - ‡∏≠‡∏µ‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á NoSSR
 */
export const ClientOnly = NoSSR;

export default NoSSR;
