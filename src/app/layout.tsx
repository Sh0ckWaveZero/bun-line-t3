import { type Metadata } from "next";
import { Prompt } from "next/font/google";
import Providers from "./providers";

import "@/styles/globals.css";
import "@/styles/ring.css";

// üé® ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Google Font Prompt
const promptFont = Prompt({
  subsets: ['latin', 'thai'],
  weight: ['100', '200', '300', '400', '500', '600', '700', '800', '900'],
  style: ['normal', 'italic'],
  display: 'swap',
  variable: '--font-prompt',
});

// ‡πÉ‡∏ä‡πâ static font class names ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô hydration mismatch
const FONT_CLASSES = `${promptFont.variable} font-prompt antialiased`

export const metadata: Metadata = {
  title: "Bun LINE T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html 
      lang="th" 
      className={promptFont.variable}
    >
      <head>
        <meta
          name="theme-color"
          media="(prefers-color-scheme: light)"
          content="#2e026d"
        />
        <meta
          name="theme-color"
          media="(prefers-color-scheme: dark)"
          content="#2e026d"
        />
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
        <meta name="format-detection" content="telephone=no" />
        {/* Development checker - ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô development */}
        {process.env.NODE_ENV === 'development' && (
          <>
            <script src="/dev-checker.js" defer />
            <script src="/production-redirect.js" defer />
          </>
        )}
      </head>
      <body 
        className={FONT_CLASSES} 
        suppressHydrationWarning={true}
      >
        <Providers>
          <div id="modal-root"></div>
          {children}
        </Providers>
      </body>
    </html>
  );
}
