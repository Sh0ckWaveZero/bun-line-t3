#!/usr/bin/env bun

/**
 * ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
 * ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö API endpoint ‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á
 */

import { env } from '../src/env.mjs';

const API_URL = `${env.FRONTEND_URL}/api/cron/auto-checkout`;

const currentTime = new Date().toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' });
console.log(`[${currentTime}] ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥...`);

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ INTERNAL_API_KEY ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if (!env.INTERNAL_API_KEY) {
  console.error('‚ùå Error: INTERNAL_API_KEY is not set in environment variables');
  console.log('Please set INTERNAL_API_KEY in your .env file.');
  process.exit(1);
}

try {
  console.log(`üìû ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API endpoint: ${API_URL}`);
  console.log(`üîë ‡πÉ‡∏ä‡πâ API Key: ${env.INTERNAL_API_KEY.substring(0, 8)}...`);
  
  const response = await fetch(API_URL, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
      'x-api-key': env.INTERNAL_API_KEY
    }
  });

  const result = await response.json();
  
  if (response.ok) {
    console.log(`‚úÖ Success: ${result.message}`);
    
    if (result.summary) {
      console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:');
      console.log(`   - ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${result.summary.processed} ‡∏Ñ‡∏ô`);
      console.log(`   - ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${result.summary.successful} ‡∏Ñ‡∏ô`);
      console.log(`   - ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${result.summary.failed} ‡∏Ñ‡∏ô`);
      console.log(`   - ‡∏Ç‡πâ‡∏≤‡∏°: ${result.summary.skipped} ‡∏Ñ‡∏ô`);
    }
    
    if (result.results && result.results.length > 0) {
      console.log('\nüìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:');
      
      result.results.forEach((item: any, index: number) => {
        console.log(`\n${index + 1}. User ID: ${item.userId}`);
        console.log(`   Status: ${item.status}`);
        
        if (item.status === 'success') {
          console.log(`   ‚è∞ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô: ${new Date(item.checkInTime).toLocaleString('th-TH')}`);
          console.log(`   üïõ ‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: ${new Date(item.autoCheckoutTime).toLocaleString('th-TH')}`);
          console.log(`   üìä ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô: ${item.workingHours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á`);
        } else if (item.status === 'failed') {
          console.log(`   ‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${item.error}`);
        } else if (item.status === 'skipped') {
          console.log(`   ‚è≠Ô∏è ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${item.reason}`);
        }
      });
    }
    
  } else {
    console.error(`‚ùå Error: HTTP ${response.status}`);
    console.error('Response:', result);
  }
  
} catch (error: any) {
  console.error('‚ùå Network Error:', error.message);
  console.error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:');
  console.error('  1. ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
  console.error('  2. URL ‡πÅ‡∏•‡∏∞ API key ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
  console.error('  3. ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢');
}

console.log('\nüèÅ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
console.log(`‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${new Date().toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' })}`);

// ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
console.log('\nüí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:');
console.log('  - ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô (00:00) ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô');
console.log('  - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏∑‡∏°‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô');
console.log('  - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö logs ‡πÉ‡∏ô production ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô');
console.log('  - ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç attendance record ‡∏ú‡πà‡∏≤‡∏ô admin panel');
