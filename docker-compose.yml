version: '3.8'

# üõ°Ô∏è SECURITY-FIRST Docker Compose ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Bun + Next.js + Prisma
# ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ï‡∏≤‡∏° Docker Security Best Practices

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
        # üîß RASPBERRY PI OPTIMIZATION: ‡∏à‡∏≥‡∏Å‡∏±‡∏î parallel builds ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ARM64
        - MAX_PARALLEL_BUILDS=1
        - NODE_OPTIONS=--max_old_space_size=2048
      target: runner
      # üîß RASPBERRY PI: ‡∏à‡∏≥‡∏Å‡∏±‡∏î memory ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö build process
      shm_size: 512m
    container_name: bun-line-t3-app
    ports:
      - "12914:12914"  # ‡πÉ‡∏ä‡πâ PORT ‡∏à‡∏≤‡∏Å .env.prod
    env_file:
      - .env.prod
    restart: unless-stopped    
    
    # üîß RASPBERRY PI OPTIMIZATION: ‡∏à‡∏≥‡∏Å‡∏±‡∏î memory usage runtime
    mem_limit: 1.5g
    mem_reservation: 512m
    cpus: 2.0  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î CPU cores ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ
    
    # üõ°Ô∏è SECURITY: Health check ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:12914/api/health"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Pi ‡∏ó‡∏µ‡πà‡∏ä‡πâ‡∏≤‡∏Å‡∏ß‡πà‡∏≤
    
    # üîê SECURITY: Security ‡πÅ‡∏•‡∏∞ resource limits
    security_opt:
      - no-new-privileges:true
    read_only: false  # Next.js standalone ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    tmpfs:
      - /tmp:rw,size=100m,mode=1777
      - /var/tmp:rw,size=50m,mode=1777

    
    # üîê SECURITY: Network isolation - ‡πÉ‡∏ä‡πâ yadom network ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
    networks:
      - yadom

  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
      args:
        - BUILDKIT_INLINE_CACHE=1
        # üîß RASPBERRY PI: Memory optimization ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö cron build
        - NODE_OPTIONS=--max_old_space_size=1024
    container_name: bun-line-t3-cron
    env_file:
      - .env.prod
    restart: unless-stopped
    
    # üîß RASPBERRY PI OPTIMIZATION: ‡∏à‡∏≥‡∏Å‡∏±‡∏î memory ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö cron service
    mem_limit: 512m
    mem_reservation: 128m
    cpus: 1.0
    
    # üõ°Ô∏è SECURITY: ‡∏£‡∏≠‡πÉ‡∏´‡πâ app service ‡∏ú‡πà‡∏≤‡∏ô health check ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏° cron
    depends_on:
      app:
        condition: service_healthy
    
    # üîê SECURITY: Security ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö cron service
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:rw,size=50m,mode=1777

    # üîê SECURITY: Network isolation - ‡πÉ‡∏ä‡πâ yadom network ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
    networks:
      - yadom

# üîê SECURITY: Network configuration ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Raspberry Pi deployment
networks:
  yadom:
    external: true  # ‡πÉ‡∏ä‡πâ network yadom ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
